<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="poly.persistance.mapper.IPageMapper">

    <!-- 검색에 사용되는 동적 SQL, 필요한 경우에만 include 하여 사용 가능하다. -->
    <sql id="searchCriteria">
            <foreach item='searchType' collection="typeArr">
                    <choose>
                        <when test='searchType == "T".toString()'>
                            GOODS_TITLE LIKE CONCAT('%',#{keyword},'%')
                        </when>
                        <when test='searchType == "C".toString()'>
                            GOODS_DETAIL LIKE CONCAT('%',#{keyword},'%')
                        </when>
                        <when test='searchType == "L".toString()'>
                            GOODS_ADDR LIKE CONCAT('%',#{keyword},'%')
                        </when>
                        <when test='searchType == "A".toString()'>
                            GOODS_TITLE OR GOODS_DETAIL LIKE CONCAT('%',#{keyword},'%')
                        </when>
                        <when test='searchType == "W".toString()'>
                            REG_ID LIKE CONCAT('%',#{keyword},'%')
                        </when>
                    </choose>
            </foreach>
    </sql>

    <sql id="searchCnt">
            <choose>
                <when test='category == "T".toString()'>
                    WHERE GOODS_TITLE LIKE CONCAT('%',#{goods_title},'%')
                </when>
                <when test='category == "C".toString()'>
                    WHERE GOODS_DETAIL LIKE CONCAT('%',#{goods_title},'%')
                </when>
                <when test='category == "L".toString()'>
                    WHERE GOODS_ADDR LIKE CONCAT('%',#{goods_title},'%')
                </when>
                <when test='category == "W".toString()'>
                    WHERE REG_ID LIKE CONCAT('%',#{goods_title},'%')
                </when>
                <when test='category == "A".toString()'>
                    WHERE GOODS_TITLE OR GOODS_DETAIL LIKE CONCAT('%',#{goods_title},'%')
                </when>
            </choose>
    </sql>

    <!-- 검색 시, 조건별 정렬을 위한 쿼리 -->
    <sql id="odrProduct">
        <choose>
            <!-- 선택하지 않을 경우 자동으로 상품번호 순 정렬-->
            <!-- 조회수 높은 순으로(인기순) 정렬 -->
            <when test='odType.equals("hit")'>
                ORDER BY HIT DESC
            </when>

            <!-- 낮은 가격 순(최저가순) 정렬 -->
            <when test='odType.equals("low")'>
                ORDER BY GOODS_PRICE ASC
            </when>

            <!-- 높은 가격 순(최고가순) 정렬 -->
            <when test='odType.equals("high")'>
                ORDER BY GOODS_PRICE DESC
            </when>
        </choose>
    </sql>

    <!-- 페이징 처리 후 게시글 리스트 불러오기
    choose에 when test="조건문" / otherwise(아닐 경우) 에 따라 쿼리를 다르게 함 -->
    <select id="selectPaging" resultType="NoticeDTO">
        SELECT * FROM (SELECT @rownum:=@rownum+1 rowNum,
        N.* FROM (SELECT * FROM aroundsell.product) N, (SELECT @ROWNUM:=0) R
        <choose>
            <when test="addr2 != null">
                WHERE ADDR2 = #{addr2} ORDER BY GOODS_NO DESC
            </when>
            <otherwise>
                ORDER BY GOODS_NO DESC
            </otherwise>
        </choose>
        ) A
        WHERE rowNum BETWEEN #{start} AND #{end}
    </select>

    <!-- 페이징 -->
    <select id="cntNotice" resultType="int">
        SELECT COUNT(*) FROM aroundsell.product
    </select>

    <!-- 로그인 되었을때 해당 지역구에 해당하는 게시물 수에 맞는 페이징을 위한 게시글 수 카운팅 -->
    <select id="cntAddrNotice" resultType="int">
        SELECT COUNT(*) FROM aroundsell.product WHERE ADDR2 = #{addr2}
    </select>

    <!-- 검색한 결과에 해당하는 건수 가져오기 -->
    <select id="cntSearchType" resultType="int">
        SELECT COUNT(*) FROM aroundsell.product
        <include refid="searchCnt"></include>
        <choose>
            <!-- include 검색결과를 카운팅하는 sql문 + 로그인 비로그인에 따라 건수를 다르게 카운팅 -->
            <when test="addr2 == null">
            </when>
            <!-- 로그인 시 해당 지역구+검색 조건에 해당하는 데이터만 카운팅함 -->
            <when test="addr2 != null">
                AND ADDR2 = #{addr2}
            </when>
        </choose>
    </select>

    <!-- 페이징 처리 + 검색한 결과 가져오기 : 구현되면 합쳐볼 예정-->
    <select id="searchList" resultType="NoticeDTO">
        SELECT * FROM (SELECT @rownum:=@rownum+1 rowNum,
        N.* FROM (SELECT * FROM aroundsell.product) N, (SELECT @ROWNUM:=0) R
        <choose>
            <!-- 로그인 상태에서 검색한 경우(추가 - 정렬 X - DEFAULT 정렬) -->
            <when test="searchType != null and keyword != null and addr2 != null and odType == null">
                WHERE
                <include refid="searchCriteria"></include>
                AND ADDR2 = #{addr2}
                ORDER BY GOODS_NO DESC
            </when>
            <!-- 비 로그인 상태에서 검색한 경우(추가 - 정렬 X - DEFAULT 정렬) -->
            <when test="searchType != null and keyword != null and addr2 == null and odType == null">
                WHERE
                <include refid="searchCriteria"></include>
                ORDER BY GOODS_NO DESC
            </when>

            <!-- 로그인 상태에서 검색 + 정렬 요청 O -->
            <when test="searchType != null and keyword != null and addr2 != null and odType != null">
                WHERE
                <!-- 검색어에 대한 조건문 쿼리 + 로그인 -->
                <include refid="searchCriteria"></include>
                AND ADDR2 = #{addr2}
                <!-- 검색한 결과에 대한 정렬 쿼리 -->
                <include refid="odrProduct"></include>
            </when>

            <!-- 비 로그인 상태에서 검색 + 정렬 요청 O -->
            <when test="searchType != null and keyword != null and addr2 == null and odType != null">
                WHERE
                <!-- 검색어에 대한 조건문 쿼리 -->
                <include refid="searchCriteria"></include>
                <!-- 검색한 결과에 대한 정렬 쿼리 -->
                <include refid="odrProduct"></include>
            </when>

            <!-- 로그인 상태에서 전체 로딩한 경우 -->
            <when test="searchType == null and keyword == null and addr2 != null and odType == null">
                WHERE ADDR2 = #{addr2}
                ORDER BY GOODS_NO DESC
            </when>

            <!-- 비 로그인 상태에서 전체 로딩한 경우 -->
            <when test="searchType == null and keyword == null and addr2 == null and odType == null">
                ORDER BY GOODS_NO DESC
            </when>
        </choose>
        ) A
        WHERE rowNum BETWEEN #{start} AND #{end}
    </select>

</mapper>