<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="poly.persistance.mapper.INoticeMapper">

    <!-- 판매글 리스트(전체) -->
    <select id="getNoticeList" parameterType="NoticeDTO" resultType="NoticeDTO">
        SELECT GOODS_NO, GOODS_TITLE, GOODS_PRICE, GOODS_ADDR, GOODS_ADDR2, IMGS, HIT, USER_NO
        FROM aroundsell.product
        <include refid="addrchk"/>
        ORDER BY GOODS_NO DESC
    </select>

    <!-- 판매글 등록 -->
    <insert id="InsertNoticeInfo" parameterType="NoticeDTO">
        INSERT INTO
            aroundsell.product
            (
             USER_NO,
             GOODS_TITLE,
             GOODS_DETAIL,
             GOODS_PRICE,
             GOODS_ADDR,
             GOODS_ADDR2,
             ADDR2,
             CATEGORY,
             IMGS,
             HIT,
             REG_ID
            )
            VALUES
            (
             #{user_no},
             #{goods_title},
             #{goods_detail},
             #{goods_price},
             #{goods_addr},
             #{goods_addr2},
             #{addr2},
             #{category},
             #{imgs},
             0,
             #{reg_id}
            )
    </insert>

    <!-- 게시판 상세보기 -->
    <select id="getNoticeInfo" parameterType="NoticeDTO" resultType="NoticeDTO">
        SELECT
               N.GOODS_NO, N.GOODS_TITLE, N.HIT, N.GOODS_DETAIL, N.GOODS_PRICE,
               N.GOODS_ADDR, N.GOODS_ADDR2, N.ADDR2, N.CATEGORY, N.IMGS, U.USER_NAME, U.USER_NO
        FROM   aroundsell.product N, aroundsell.user_info U
        WHERE  N.USER_NO = U.USER_NO
        AND    N.GOODS_NO = #{goods_no}
    </select>

    <!-- 게시판 조회수 업데이트 -->
    <update id="updateNoticeHit" parameterType="NoticeDTO">
        UPDATE
            aroundsell.product
        SET
            HIT = HIT + 1
        WHERE
            GOODS_NO = #{goods_no}
    </update>

    <!-- 게시판 글 수정 -->
    <update id="updateNoticeInfo" parameterType="NoticeDTO">
        UPDATE
            aroundsell.product
        SET
            GOODS_TITLE = #{goods_title},
            GOODS_DETAIL = #{goods_detail},
            GOODS_PRICE = #{goods_price},
            GOODS_ADDR = #{goods_addr},
            GOODS_ADDR2 = #{goods_addr2},
            ADDR2 = #{addr2},
            CATEGORY = #{category},
            IMGS = #{imgs}
        WHERE
            GOODS_NO = #{goods_no}
    </update>

    <!-- 게시판 글 삭제 -->
    <delete id="deleteNoticeInfo" parameterType="NoticeDTO">
        DELETE
            FROM aroundsell.product
        WHERE GOODS_NO = #{goods_no}
    </delete>

    <!-- 게시판 회원의 모든 글 삭제 -->
    <delete id="deleteNoticeAll" parameterType="NoticeDTO">
        DELETE
            FROM aroundsell.product
        WHERE USER_NO = #{user_no}
    </delete>

    <!-- 나의 판매글 리스트(마이페이지) -->
    <select id="getMyList" parameterType="NoticeDTO" resultType="NoticeDTO">
        SELECT GOODS_NO, GOODS_TITLE, GOODS_PRICE, GOODS_ADDR, HIT, IMGS
        FROM aroundsell.product
        WHERE USER_NO = #{user_no}
        ORDER BY GOODS_NO DESC
    </select>

    <!-- 나의 판매글 삭제 -->
    <delete id="delMySell" parameterType="NoticeDTO">
        DELETE FROM
        aroundsell.product
        WHERE GOODS_NO = #{goods_no}
    </delete>

    <!-- 로그인 여부에 따라 전체글을 가져올지, 지역구에 해당하는 판매글을 가져올지 판단 -->
    <sql id="addrchk">
        <choose>
        <!-- nvl처리로 로그인 안한 사용자라면, "none"으로 전체글을 가져옴 -->
        <when test='addr2.equals("none")'>

        </when>
        <!-- 로그인한 사용자라면, 가입 지역구에 있는 판매글을 가져옴 -->
        <when test='!addr2.equals("none")'>
        WHERE ADDR2 = #{addr2}
        </when>
        </choose>
    </sql>

    <!-- 카테고리별 몇 건의 게시물이 있는지 카운트 -->
    <select id="cateCount" parameterType="NoticeDTO" resultType="NoticeDTO">
        SELECT CATEGORY, COUNT(*) AS CNT
        FROM aroundsell.product
        <include refid="addrchk"/>
        GROUP BY CATEGORY;
    </select>

    <!-- 카테고리별로 조회수 많은(인기순) 5건씩 가져옴 -> LIMIT은 0부터 가져올 개수만큼-->
    <select id="hitProduct" parameterType="NoticeDTO" resultType="NoticeDTO">
        SELECT
            *
        FROM
            aroundsell.product
        <include refid="category"/>
        ORDER BY HIT DESC
        LIMIT 0,5
    </select>

    <!-- 카테고리 별로 인기 상품 제공, 지정되지 않은 경우(default) 전체 상품에 대해 진행함 -->
    <sql id="category">
        <choose>
        <!-- 카테고리별 인기 게시물을 요청받을 경우에만 where절을 추가함 -->
        <when test='!category.equals("none")'>
            WHERE CATEGORY = #{category}
        </when>
        <when test='category.equals("none")'>
        </when>
        </choose>
    </sql>

</mapper>